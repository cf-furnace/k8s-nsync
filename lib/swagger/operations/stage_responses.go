package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cf-furnace/k8s-nsync/lib/model"
)

/*StageAccepted Staging request accepted

swagger:response stageAccepted
*/
type StageAccepted struct {
}

// NewStageAccepted creates StageAccepted with default headers values
func NewStageAccepted() *StageAccepted {
	return &StageAccepted{}
}

// WriteResponse to the client
func (o *StageAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
}

/*StageBadRequest JSON unmarshalling error

swagger:response stageBadRequest
*/
type StageBadRequest struct {
}

// NewStageBadRequest creates StageBadRequest with default headers values
func NewStageBadRequest() *StageBadRequest {
	return &StageBadRequest{}
}

// WriteResponse to the client
func (o *StageBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
}

/*StageNotFound Couldn't find backend

swagger:response stageNotFound
*/
type StageNotFound struct {
}

// NewStageNotFound creates StageNotFound with default headers values
func NewStageNotFound() *StageNotFound {
	return &StageNotFound{}
}

// WriteResponse to the client
func (o *StageNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

/*StageInternalServerError Staging error

swagger:response stageInternalServerError
*/
type StageInternalServerError struct {

	// In: body
	Payload *model.StagingResponseFromCC `json:"body,omitempty"`
}

// NewStageInternalServerError creates StageInternalServerError with default headers values
func NewStageInternalServerError() *StageInternalServerError {
	return &StageInternalServerError{}
}

// WithPayload adds the payload to the stage internal server error response
func (o *StageInternalServerError) WithPayload(payload *model.StagingResponseFromCC) *StageInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stage internal server error response
func (o *StageInternalServerError) SetPayload(payload *model.StagingResponseFromCC) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
