package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

/*DesireAppRequestFromCC desire app request from c c

swagger:model DesireAppRequestFromCC
*/
type DesireAppRequestFromCC struct {

	/* allow ssh
	 */
	AllowSSH bool `json:"allow_ssh,omitempty"`

	/* disk mb
	 */
	DiskMb int64 `json:"disk_mb,omitempty"`

	/* docker email
	 */
	DockerEmail string `json:"docker_email,omitempty"`

	/* docker image
	 */
	DockerImage string `json:"docker_image,omitempty"`

	/* docker login server
	 */
	DockerLoginServer string `json:"docker_login_server,omitempty"`

	/* docker password
	 */
	DockerPassword string `json:"docker_password,omitempty"`

	/* docker user
	 */
	DockerUser string `json:"docker_user,omitempty"`

	/* droplet uri
	 */
	DropletURI string `json:"droplet_uri,omitempty"`

	/* egress rules
	 */
	EgressRules []*SecurityGroupRule `json:"egress_rules,omitempty"`

	/* environment
	 */
	Environment []*EnvironmentVariable `json:"environment,omitempty"`

	/* etag
	 */
	Etag string `json:"etag,omitempty"`

	/* execution metadata
	 */
	ExecutionMetadata string `json:"execution_metadata,omitempty"`

	/* file descriptors
	 */
	FileDescriptors int64 `json:"file_descriptors,omitempty"`

	/* health check timeout in seconds
	 */
	HealthCheckTimeoutInSeconds int64 `json:"health_check_timeout_in_seconds,omitempty"`

	/* health check type
	 */
	HealthCheckType HealthCheckType `json:"health_check_type,omitempty"`

	/* log guid
	 */
	LogGUID string `json:"log_guid,omitempty"`

	/* log source
	 */
	LogSource string `json:"log_source,omitempty"`

	/* memory mb
	 */
	MemoryMb int64 `json:"memory_mb,omitempty"`

	/* network
	 */
	Network *Network `json:"network,omitempty"`

	/* num instances
	 */
	NumInstances int64 `json:"num_instances,omitempty"`

	/* ports
	 */
	Ports []int64 `json:"ports,omitempty"`

	/* process guid
	 */
	ProcessGUID string `json:"process_guid,omitempty"`

	/* routing info
	 */
	RoutingInfo CCRouteInfo `json:"routing_info,omitempty"`

	/* stack
	 */
	Stack string `json:"stack,omitempty"`

	/* start command
	 */
	StartCommand string `json:"start_command,omitempty"`

	/* volume mounts
	 */
	VolumeMounts []*VolumeMount `json:"volume_mounts,omitempty"`
}

// Validate validates this desire app request from c c
func (m *DesireAppRequestFromCC) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEgressRules(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateEnvironment(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNetwork(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePorts(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVolumeMounts(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DesireAppRequestFromCC) validateEgressRules(formats strfmt.Registry) error {

	if swag.IsZero(m.EgressRules) { // not required
		return nil
	}

	for i := 0; i < len(m.EgressRules); i++ {

		if swag.IsZero(m.EgressRules[i]) { // not required
			continue
		}

		if m.EgressRules[i] != nil {

			if err := m.EgressRules[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *DesireAppRequestFromCC) validateEnvironment(formats strfmt.Registry) error {

	if swag.IsZero(m.Environment) { // not required
		return nil
	}

	for i := 0; i < len(m.Environment); i++ {

		if swag.IsZero(m.Environment[i]) { // not required
			continue
		}

		if m.Environment[i] != nil {

			if err := m.Environment[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *DesireAppRequestFromCC) validateNetwork(formats strfmt.Registry) error {

	if swag.IsZero(m.Network) { // not required
		return nil
	}

	if m.Network != nil {

		if err := m.Network.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *DesireAppRequestFromCC) validatePorts(formats strfmt.Registry) error {

	if swag.IsZero(m.Ports) { // not required
		return nil
	}

	return nil
}

func (m *DesireAppRequestFromCC) validateVolumeMounts(formats strfmt.Registry) error {

	if swag.IsZero(m.VolumeMounts) { // not required
		return nil
	}

	for i := 0; i < len(m.VolumeMounts); i++ {

		if swag.IsZero(m.VolumeMounts[i]) { // not required
			continue
		}

		if m.VolumeMounts[i] != nil {

			if err := m.VolumeMounts[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
